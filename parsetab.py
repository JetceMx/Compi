
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL COMMA DIVIDE DO ELSE END EQ EXPONENT FALSE FLOAT GE GT ID IF INT LBRACE LE LPAREN LT MINUS NEQ NUMBER OR PLUS PROGRAM RBRACE READ RPAREN SEMI THEN TIMES TRUE UNTIL WHILE WRITEprogram : PROGRAM LBRACE declarations statements RBRACEdeclarations : declarations declaration\n                    | emptydeclaration : type declaration_list SEMIdeclaration_list : ID\n                        | declaration_list COMMA IDtype : INT\n            | FLOAT\n            | BOOLstatements : statements statement\n                  | emptystatement : WRITE expression SEMI\n                 | READ ID SEMI\n                 | IF expression THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE END\n                 | DO LBRACE statements RBRACE UNTIL LPAREN expression RPAREN SEMI\n                 | WHILE LPAREN expression RPAREN LBRACE statements RBRACE\n                 | ID ASSIGN expression SEMIexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression LT term\n                  | expression LE term\n                  | expression GT term\n                  | expression GE term\n                  | expression EQ term\n                  | expression NEQ term\n                  | expression AND term\n                  | expression OR term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term EXPONENT factor\n            | factorfactor : NUMBER\n              | ID\n              | TRUE\n              | FALSE\n              | LPAREN expression RPARENempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,13,],[0,-1,]),'LBRACE':([2,19,55,76,83,],[3,34,74,79,86,]),'INT':([3,4,5,7,36,],[-38,10,-3,-2,-4,]),'FLOAT':([3,4,5,7,36,],[-38,11,-3,-2,-4,]),'BOOL':([3,4,5,7,36,],[-38,12,-3,-2,-4,]),'RBRACE':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,13,-2,-11,-10,-38,-4,-12,-13,75,-17,-38,80,-38,85,-16,-38,90,-15,-14,]),'WRITE':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,15,-2,-11,-10,-38,-4,-12,-13,15,-17,-38,15,-38,15,-16,-38,15,-15,-14,]),'READ':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,16,-2,-11,-10,-38,-4,-12,-13,16,-17,-38,16,-38,16,-16,-38,16,-15,-14,]),'IF':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,18,-2,-11,-10,-38,-4,-12,-13,18,-17,-38,18,-38,18,-16,-38,18,-15,-14,]),'DO':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,19,-2,-11,-10,-38,-4,-12,-13,19,-17,-38,19,-38,19,-16,-38,19,-15,-14,]),'WHILE':([3,4,5,6,7,8,14,34,36,38,53,56,73,74,77,79,82,85,86,88,89,91,],[-38,-38,-3,20,-2,-11,-10,-38,-4,-12,-13,20,-17,-38,20,-38,20,-16,-38,20,-15,-14,]),'ID':([3,4,5,6,7,8,9,10,11,12,14,15,16,18,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,73,74,77,79,81,82,85,86,88,89,91,],[-38,-38,-3,17,-2,-11,22,-7,-8,-9,-10,27,31,27,27,27,-38,27,-4,58,-12,27,27,27,27,27,27,27,27,27,27,27,27,27,-13,17,-17,-38,17,-38,27,17,-16,-38,17,-15,-14,]),'NUMBER':([15,18,30,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,81,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TRUE':([15,18,30,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,81,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FALSE':([15,18,30,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,81,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LPAREN':([15,18,20,30,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,78,81,],[30,30,35,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,81,30,]),'ASSIGN':([17,],[32,]),'SEMI':([21,22,23,24,25,26,27,28,29,31,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,87,],[36,-5,38,-28,-32,-33,-34,-35,-36,53,73,-6,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,89,]),'COMMA':([21,22,58,],[37,-5,-6,]),'PLUS':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[39,-28,-32,-33,-34,-35,-36,39,39,39,39,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,39,]),'MINUS':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[40,-28,-32,-33,-34,-35,-36,40,40,40,40,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,40,]),'LT':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[41,-28,-32,-33,-34,-35,-36,41,41,41,41,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,41,]),'LE':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[42,-28,-32,-33,-34,-35,-36,42,42,42,42,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,42,]),'GT':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[43,-28,-32,-33,-34,-35,-36,43,43,43,43,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,43,]),'GE':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[44,-28,-32,-33,-34,-35,-36,44,44,44,44,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,44,]),'EQ':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[45,-28,-32,-33,-34,-35,-36,45,45,45,45,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,45,]),'NEQ':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[46,-28,-32,-33,-34,-35,-36,46,46,46,46,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,46,]),'AND':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[47,-28,-32,-33,-34,-35,-36,47,47,47,47,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,47,]),'OR':([23,24,25,26,27,28,29,33,52,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[48,-28,-32,-33,-34,-35,-36,48,48,48,48,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,48,]),'THEN':([24,25,26,27,28,29,33,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[-28,-32,-33,-34,-35,-36,55,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,]),'RPAREN':([24,25,26,27,28,29,52,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,],[-28,-32,-33,-34,-35,-36,72,76,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-31,-37,87,]),'TIMES':([24,25,26,27,28,29,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[49,-32,-33,-34,-35,-36,49,49,49,49,49,49,49,49,49,49,-29,-30,-31,-37,]),'DIVIDE':([24,25,26,27,28,29,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[50,-32,-33,-34,-35,-36,50,50,50,50,50,50,50,50,50,50,-29,-30,-31,-37,]),'EXPONENT':([24,25,26,27,28,29,59,60,61,62,63,64,65,66,67,68,69,70,71,72,],[51,-32,-33,-34,-35,-36,51,51,51,51,51,51,51,51,51,51,-29,-30,-31,-37,]),'UNTIL':([75,],[78,]),'ELSE':([80,],[83,]),'END':([90,],[91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([3,],[4,]),'empty':([3,4,34,74,79,86,],[5,8,8,8,8,8,]),'statements':([4,34,74,79,86,],[6,56,77,82,88,]),'declaration':([4,],[7,]),'type':([4,],[9,]),'statement':([6,56,77,82,88,],[14,14,14,14,14,]),'declaration_list':([9,],[21,]),'expression':([15,18,30,32,35,81,],[23,33,52,54,57,84,]),'term':([15,18,30,32,35,39,40,41,42,43,44,45,46,47,48,81,],[24,24,24,24,24,59,60,61,62,63,64,65,66,67,68,24,]),'factor':([15,18,30,32,35,39,40,41,42,43,44,45,46,47,48,49,50,51,81,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,69,70,71,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM LBRACE declarations statements RBRACE','program',5,'p_program','main.py',99),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','main.py',107),
  ('declarations -> empty','declarations',1,'p_declarations','main.py',108),
  ('declaration -> type declaration_list SEMI','declaration',3,'p_declaration','main.py',115),
  ('declaration_list -> ID','declaration_list',1,'p_declaration_list','main.py',124),
  ('declaration_list -> declaration_list COMMA ID','declaration_list',3,'p_declaration_list','main.py',125),
  ('type -> INT','type',1,'p_type','main.py',132),
  ('type -> FLOAT','type',1,'p_type','main.py',133),
  ('type -> BOOL','type',1,'p_type','main.py',134),
  ('statements -> statements statement','statements',2,'p_statements','main.py',138),
  ('statements -> empty','statements',1,'p_statements','main.py',139),
  ('statement -> WRITE expression SEMI','statement',3,'p_statement','main.py',146),
  ('statement -> READ ID SEMI','statement',3,'p_statement','main.py',147),
  ('statement -> IF expression THEN LBRACE statements RBRACE ELSE LBRACE statements RBRACE END','statement',11,'p_statement','main.py',148),
  ('statement -> DO LBRACE statements RBRACE UNTIL LPAREN expression RPAREN SEMI','statement',9,'p_statement','main.py',149),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_statement','main.py',150),
  ('statement -> ID ASSIGN expression SEMI','statement',4,'p_statement','main.py',151),
  ('expression -> expression PLUS term','expression',3,'p_expression','main.py',170),
  ('expression -> expression MINUS term','expression',3,'p_expression','main.py',171),
  ('expression -> expression LT term','expression',3,'p_expression','main.py',172),
  ('expression -> expression LE term','expression',3,'p_expression','main.py',173),
  ('expression -> expression GT term','expression',3,'p_expression','main.py',174),
  ('expression -> expression GE term','expression',3,'p_expression','main.py',175),
  ('expression -> expression EQ term','expression',3,'p_expression','main.py',176),
  ('expression -> expression NEQ term','expression',3,'p_expression','main.py',177),
  ('expression -> expression AND term','expression',3,'p_expression','main.py',178),
  ('expression -> expression OR term','expression',3,'p_expression','main.py',179),
  ('expression -> term','expression',1,'p_expression','main.py',180),
  ('term -> term TIMES factor','term',3,'p_term','main.py',188),
  ('term -> term DIVIDE factor','term',3,'p_term','main.py',189),
  ('term -> term EXPONENT factor','term',3,'p_term','main.py',190),
  ('term -> factor','term',1,'p_term','main.py',191),
  ('factor -> NUMBER','factor',1,'p_factor','main.py',205),
  ('factor -> ID','factor',1,'p_factor','main.py',206),
  ('factor -> TRUE','factor',1,'p_factor','main.py',207),
  ('factor -> FALSE','factor',1,'p_factor','main.py',208),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','main.py',209),
  ('empty -> <empty>','empty',0,'p_empty','main.py',231),
]
